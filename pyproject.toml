[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
mongo2neo4j = "mongo2neo4j:console_main"

[project]
name = "mongo2neo4j"
dynamic = ['version']
description = "Imports object structures generated by MongoDB object relation mappers (like Mongoose) into Neo4j for exploration with SemSpect"
authors = [
  { name="Marko Luther" },
  { name="Paul Holleis" },
  { name="Thorsten Liebig" },
  { name="Vincent Vialard" }
]
license = {file = 'LICENSE'}
readme = "README.md"
requires-python = ">=3.11"
keywords = ['MongoDB', 'Neo4j', 'Mongoose', 'SemSpect', 'exploration', 'conversion']
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    "Operating System :: OS Independent",
    'Topic :: Other/Nonlisted Topic'
]

[project.urls]
"Homepage" = "https://makomo.github.io/mongo2neo4j/"
"Issue Tracker" = "https://github.com/MAKOMO/mongo2neo4j/issues"

[tool.setuptools.dynamic]
version = {attr = "mongo2neo4j.__version__"}

## black

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/foo.py  # exclude a file named foo.py in the root of the project (in addition to the defaults)
'''

## pylint conf

[tool.pylint.MASTER]
load-plugins = [
    'pylint.extensions.no_self_use'
]

[tool.pylint.'MESSAGES CONTROL']

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then re-enable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable='''
        line-too-long,
        too-many-lines,
        trailing-whitespace,
        missing-final-newline,
        trailing-newlines,
        multiple-statements,
        multiple-imports,
        wrong-import-order,
        ungrouped-imports,
        wrong-import-position,
        useless-import-alias,
        import-outside-toplevel,
        empty-docstring,
        missing-module-docstring,
        missing-class-docstring,
        missing-function-docstring,
        invalid-name,
        too-many-statements,
        too-many-branches,
        too-many-ancestors,
        too-many-instance-attributes,
        too-few-public-methods,
        too-many-public-methods,
        too-many-return-statements,
        too-many-branches,
        too-many-arguments,
        too-many-locals,
        too-many-boolean-expressions,
        too-many-nested-blocks,
        cyclic-import,
        duplicate-code,
'''

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
enable='''c-extension-no-member,'''


## mypy conf

[tool.mypy]
files = ["src/mongo2neo4j/*.py"]
python_version = "3.11"
check_untyped_defs = true


## ruff conf

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), Updates ('UP'), flake8-bugbear (`B`) codes by default.
# also flake8-2020 (YTT), flake8-commas (COM), flake8-comprehensions (C4),
# flake8-datetimez (DTZ), flake8-pie (PIE), flake8-raise (RSE), flake8-return (RET),
# flake8-simplify (SIM), flake8-gettext (INT), flake8-unused-arguments (ARG),
# Error (PLE), Refactor (PLR), Warning (PLW)
## next: flake8-use-pathlib (PTH), flake8-print (T20)
select = ["E", "F", "UP", "B", "A", "YTT", "COM", "C4", "DTZ", "PIE", "RSE", "RET", "SIM", "ARG", "PLE", "PLR", "PLW", "INT"]

format = "pylint" # one of: text, json, junit, grouped, github, gitlab, pylint, azure

# Same as Black.
line-length = 100

# Never enforce `E501` (line length violations).
ignore = ["E402", "E501", "E741", "PLR0913", "PLR2004", "COM812", "PLR0912", "PLR0915", "PLW0603", "PLR0911", "SIM105", "SIM114"]

# Exclude a variety of commonly ignored directories.
exclude = ["dist", "build", "proto", ".pytype", ".mypy_cache", ".git"]

# Assume Python 3.11
target-version = "py311"



## pyright conf

[tool.pyright]
include = ["src/mongo2neo4j"]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.11"
pythonPlatform = "All"

#typeCheckingMode = "strict" # "off", "basic", "strict"

# strict disabled checks # "error", "warning", false, true
#reportUnboundVariable = "error"
#reportUnknownParameterType = false
#reportMissingParameterType = false
#reportUnknownMemberType = false
#reportUnknownArgumentType = false
#reportGeneralTypeIssues = false
useLibraryCodeForTypes = false


## pytest conf

[tool.pytest.ini_options]
minversion = "7.4"
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]
pythonpath = [
  "src"
]
